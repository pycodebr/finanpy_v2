#!/usr/bin/env python
"""
Script para deployment de arquivos est√°ticos do FinanPy.
Execute este script para coletar e preparar todos os arquivos est√°ticos.
"""

import os
import sys
import django
from django.core.management import execute_from_command_line

def main():
    """Executa os comandos necess√°rios para deployment de static files."""
    
    # Configura o ambiente Django
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')
    django.setup()
    
    print("üöÄ Iniciando deployment de arquivos est√°ticos...")
    
    # Remove arquivos est√°ticos antigos
    print("üßπ Limpando arquivos est√°ticos antigos...")
    execute_from_command_line(['manage.py', 'collectstatic', '--clear', '--noinput'])
    
    # Coleta todos os arquivos est√°ticos
    print("üì¶ Coletando arquivos est√°ticos...")
    execute_from_command_line(['manage.py', 'collectstatic', '--noinput'])
    
    print("‚úÖ Deployment de arquivos est√°ticos conclu√≠do com sucesso!")
    print(f"üìÅ Arquivos est√°ticos coletados em: {os.path.join(os.getcwd(), 'staticfiles')}")
    
    # Verifica se os arquivos principais existem
    static_files_to_check = [
        'staticfiles/css/custom.css',
        'staticfiles/js/main.js',
        'staticfiles/admin/css/base.css'
    ]
    
    print("\nüîç Verificando arquivos principais...")
    for file_path in static_files_to_check:
        if os.path.exists(file_path):
            print(f"‚úÖ {file_path}")
        else:
            print(f"‚ùå {file_path} - ARQUIVO N√ÉO ENCONTRADO")
    
    print("\nüìã Pr√≥ximos passos para produ√ß√£o:")
    print("1. Configure seu servidor web (Apache/Nginx) para servir arquivos est√°ticos")
    print("2. Aponte STATIC_ROOT para o diret√≥rio correto do servidor")
    print("3. Use settings_production.py com ManifestStaticFilesStorage")
    print("4. Configure HTTPS e headers de seguran√ßa")

if __name__ == '__main__':
    main()